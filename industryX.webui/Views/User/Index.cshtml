@model IEnumerable<IndustryX.WebUI.ViewModels.UserListViewModel>

@{
    ViewData["Title"] = "User List";
    var roles = Model.Select(u => u.Role).Distinct().OrderBy(r => r).ToList();
    var warehouses = Model.Select(u => u.WarehouseName).Distinct().OrderBy(w => w).ToList();
}

<div class="my-4">
    <h2 class="text-center text-primary mb-4">
        <i class="fas fa-users"></i> User List
    </h2>

    <!-- Filters -->
    <div class="row mb-4">
        <div class="col-md-4">
            <input type="text" class="form-control" placeholder="Search by name..." id="searchInput" />
        </div>
        <div class="col-md-4">
            <select class="form-select" id="roleFilter">
                <option value="">All Roles</option>
                @foreach (var role in roles)
                {
                    <option value="@role">@role</option>
                }
            </select>
        </div>
        <div class="col-md-4">
            <select class="form-select" id="warehouseFilter">
                <option value="">All Warehouses</option>
                @foreach (var warehouse in warehouses)
                {
                    <option value="@warehouse">@warehouse</option>
                }
            </select>
        </div>
    </div>

    <!-- User Cards -->
    <div class="row g-4" id="userCards">
        @foreach (var user in Model)
        {
            <div class="col-md-4 user-card" data-role="@user.Role" data-warehouse="@user.WarehouseName" data-name="@user.Fullname.ToLower()">
                <div class="card h-100 shadow-sm text-center p-3">
                    <img src="/images/avatar-placeholder.png" class="rounded-circle mb-3 mx-auto" style="width: 100px; height: 100px; object-fit: cover;" alt="Avatar" />
                    <h5 class="card-title">@user.Fullname</h5>
                    <p class="text-muted mb-1"><strong>Role:</strong> @user.Role</p>
                    <p class="text-muted mb-1"><strong>Phone:</strong> @user.PhoneNumber</p>
                    <p class="text-muted mb-3"><strong>Warehouse:</strong> @user.WarehouseName</p>
                    @if (User.IsInRole("Admin"))
                    {
                        <div class="d-flex justify-content-center gap-2">
                            <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-sm btn-outline-primary" title="Edit">
                                <i class="fas fa-edit"></i>
                            </a>
                            <form asp-action="Delete" asp-route-id="@user.Id" method="post" onsubmit="return confirm('Are you sure?');" class="d-inline">
                                <button type="submit" class="btn btn-sm btn-outline-danger" title="Delete">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            </form>
                        </div>                        
                    }
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        const searchInput = document.getElementById("searchInput");
        const roleFilter = document.getElementById("roleFilter");
        const warehouseFilter = document.getElementById("warehouseFilter");
        const cards = document.querySelectorAll(".user-card");

        function filterCards() {
            const search = searchInput.value.toLowerCase();
            const role = roleFilter.value;
            const warehouse = warehouseFilter.value;

            cards.forEach(card => {
                const name = card.dataset.name;
                const userRole = card.dataset.role;
                const userWarehouse = card.dataset.warehouse;

                const matchesName = name.includes(search);
                const matchesRole = !role || userRole === role;
                const matchesWarehouse = !warehouse || userWarehouse === warehouse;

                card.style.display = matchesName && matchesRole && matchesWarehouse ? "block" : "none";
            });
        }

        searchInput.addEventListener("input", filterCards);
        roleFilter.addEventListener("change", filterCards);
        warehouseFilter.addEventListener("change", filterCards);
    </script>
}
