@model IndustryX.Domain.Entities.Production
@{
    ViewData["Title"] = "Production Detail";
}

<div class="my-4 p-4 bg-light shadow-sm rounded">
    <h2 class="text-center text-primary mb-4">
        <i class="fas fa-info-circle"></i> Production Detail
    </h2>

    <div class="row mb-4">
        <div class="col-md-6">
            <h5 class="text-muted mb-3">General Info</h5>
            <ul class="list-group list-group-flush small">
                <li class="list-group-item d-flex justify-content-between">
                    <strong>Product:</strong> <span>@Model.Product.Name</span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                    <strong>Boxes:</strong> <span>@Model.BoxQuantity</span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                    <strong>Pieces Produced:</strong> <span>@Model.TotalProducedPieces</span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                    <strong>Workers:</strong> <span>@Model.WorkerCount</span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                    <strong>Status:</strong>
                    <span>
                        @switch (Model.Status)
                        {
                            case ProductionStatus.Planned:
                                        <span class="badge bg-secondary">Planned</span>
                                break;
                            case ProductionStatus.InProgress:
                                        <span class="badge bg-primary">In Progress</span>
                                break;
                            case ProductionStatus.Paused:
                                        <span class="badge bg-warning text-dark">Paused</span>
                                break;
                            case ProductionStatus.Completed:
                                        <span class="badge bg-success">Completed</span>
                                break;
                        }
                    </span>
                </li>
            </ul>
        </div>

        <div class="col-md-6">
            <h5 class="text-muted mb-3">Timing Info</h5>
            <ul class="list-group list-group-flush small">
                <li class="list-group-item d-flex justify-content-between">
                    <strong>Start Time:</strong>
                    <span>@(Model.StartTime?.ToString("g") ?? "-")</span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                    <strong>End Time:</strong>
                    <span>@(Model.EndTime?.ToString("g") ?? "-")</span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                    <strong>Total Time (millis):</strong>
                    <span>@Model.TotalTime.ToString("F0")</span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                    <strong>Break Time (millis):</strong>
                    <span>@Model.BreakOutTime.ToString("F0")</span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                    <strong>Created At:</strong>
                    <span>@Model.CreatedAt.ToString("g")</span>
                </li>
            </ul>
        </div>
    </div>

    @if (!string.IsNullOrWhiteSpace(Model.Notes))
    {
            <div class="mb-4">
                <h5 class="text-muted mb-2">Notes</h5>
                <div class="alert alert-secondary small">
                @Model.Notes
                </div>
            </div>
    }

    @if (Model.Pauses.Any())
    {
            <div class="mb-4">
                <h5 class="text-muted mb-2">Pauses</h5>
                <table class="table table-bordered table-sm">
                    <thead class="table-light">
                        <tr>
                            <th>#</th>
                            <th>Paused At</th>
                            <th>Resumed At</th>
                            <th>Duration (min)</th>
                        </tr>
                    </thead>
                    <tbody>
                    @for (int i = 0; i < Model.Pauses.Count; i++)
                    {
                        var pause = Model.Pauses.ElementAt(i);
                                <tr>
                                    <td>@(i + 1)</td>
                                    <td>@pause.PausedAt.ToString("g")</td>
                                    <td>@(pause.ResumedAt != default ? pause.ResumedAt.ToString("g") : "-")</td>
                                    <td>@pause.Duration.ToString("0.##")</td>
                                </tr>
                    }
                    </tbody>
                </table>
            </div>
    }

    <div class="d-flex justify-content-end">
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-1"></i> Back to List
        </a>
    </div>
</div>
